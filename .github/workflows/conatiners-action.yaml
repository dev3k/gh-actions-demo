name: Containers Workflow - env
on:
  workflow_dispatch:
#   push:
#     branches:
#       - main
#       - dev
#     paths-ignore: # ignore pathes for push
#       - ".github/workflows/*"
#       - "second-action-react/*"
env: #global env settings
  MONGODB_DB_NAME: gha-demo
  PORT: 8080
jobs:
  test:
    environment: testing
    # Check setting page
    # you can add local env here
    env:
      MONGODB_CONNECTION_PROTOCOL: mongodb
      MONGODB_CLUSTER_ADDRESS: mongodb #same service name if you run container
      MONGODB_USERNAME: root
      MONGODB_PASSWORD: example
    runs-on: ubuntu-latest
    # will run on docker hub image
    container:
      image: node:18
    #   env:
    services:
      mongodb:
        image: mongo
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: example
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: env-variables/node_modules
          key: deps-node-conatiner-${{ hashFiles('env-variables/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: cd env-variables && npm ci
      - name: Run server
        run: cd env-variables && npm start & npx wait-on http://127.0.0.1:$PORT
      - name: Run tests
        run: cd env-variables && npm test
      - name: Output information
        run: |
          echo "MONGODB_USERNAME: ${{ env.MONGODB_USERNAME }}" # this will be hidden
          echo "MONGODB_DB_NAME: ${{ env.MONGODB_DB_NAME }}" # this will be hidden
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: |
          echo "MONGODB_USERNAME: ${{ env.MONGODB_USERNAME }}" # will not work
          echo "MONGODB_DB_NAME: ${{ env.MONGODB_DB_NAME }}" # this will be hidden
